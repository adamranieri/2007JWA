package dev.alsabea.daos;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

import dev.alsabea.connectionUtils.ConnectionUtils;
import dev.alsabea.daos.impl.CustomerDaoImpl;
import dev.alsabea.entities.Customer;


@TestMethodOrder(OrderAnnotation.class)
public class TestCustomerDao {
	
	CustomerDao custDao= CustomerDaoImpl.getCustomerDao();
	
	/*
	 * T create( T t) ;
	
		boolean delete(int id);
		
		T retrieveById(int id);
		
		T update ( T t);
	 */
	//List<Account> getAccounts ( int id);

	/*
	 * 	private int customerId;
	private String username;
	private String password;
	private List<Account> Accounts;
	 */
	
	@Test	@Order(1)
	void testRetrieveById() {
		
		Customer c = custDao.retrieveById(3);
		
		Assertions.assertEquals("rex", c.getUsername());
	}
	
	@Test @Order(2)
	void createCustomer() {
		Customer c= new Customer();
		c.setCustomerId(10001);
		c.setUsername("testName");
		c.setPassword("testPass");
		Assertions.assertNotNull( custDao.create(c));

	}
	
	
	
	
	
	@Test  @Order(3)
	void testDeleteById() {
		
		Customer c= new Customer();
		c.setUsername("testUserToBeDeleted");
		c.setPassword("testPassToBeDeleted");
		
		int idInDb=custDao.create(c);
		
		Assertions.assertEquals(idInDb, custDao.delete(idInDb));
	}
	
	
	@Test
	void testUpdate() {
		
		Customer t= new Customer();
		String user = "testUserToBeUpdated";
		String pass = "testPassToBeUpdated";
		t.setUsername(user);
		t.setPassword(pass);
		
		int id= custDao.create(t);
		
		Customer c = new Customer();
		c.setCustomerId(id);
		c.setUsername("testUpdatedName");
		c.setPassword("testUpdatedPassword");
		
		Assertions.assertEquals(id,custDao.update(c));
	}
	
	@AfterAll
	void removeTestingStuff() {
		String sql = "delete from customer where username LIKE 'test%';";
		
		try (Connection con= ConnectionUtils.getConnection();){
			
			PreparedStatement ps=con.prepareStatement(sql);
			ps.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
	
	
}





























