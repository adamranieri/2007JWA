package dev.alsabea.services;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.MethodOrderer.OrderAnnotation;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

import dev.alsabea.connectionUtils.ConnectionUtils;
import dev.alsabea.entities.Account;
import dev.alsabea.exceptions.NegativeBalanceException;
import dev.alsabea.services.AccountServices;
import dev.alsabea.services.impl.AccountServicesImpl;

@TestMethodOrder(OrderAnnotation.class)
class TestAccountServices {
	
	
	AccountServices aServices = AccountServicesImpl.getAccountServicesInstance();

	@Test @Order(1)
	void testCreateAccount() {
		Account a= new Account();
		a.setCustomerId(5);
		a.setAccountName("test_create_name");
		a.setBalance(800);
		
		Assertions.assertNotEquals(0,aServices.create(a));
		

	}
	
	@Test	@Order(2)
	void testRetrieveById() {
		Account a= aServices.retrieveById(100);
		Assertions.assertEquals("savings", a.getAccountName());
		
	}
	
	
	
	@Test 
	void testDeleteById() {
		Account a= new Account();
		a.setCustomerId(5);
		a.setAccountName("test_to_be_deleted");
		a.setBalance(800);

		int id=0;
		try {
			id = aServices.create(a);
		} catch (NegativeBalanceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		Assertions.assertTrue(aServices.delete(id));
		
		
	}
	
	
	@Test
	void testUpdate() {
		Account a= new Account();
		a.setCustomerId(5);
		a.setAccountName("testToBeUpdatedName");
		a.setBalance(800);
		
		int id=0;
		try {
			id = aServices.create(a);
			Account aUpdated= new Account();
			aUpdated.setAccountId(id);
			aUpdated.setCustomerId(5);
			aUpdated.setAccountName("testUpdatedName");
			aUpdated.setBalance(1000);
			Assertions.assertTrue(aServices.update(aUpdated));
		} catch (NegativeBalanceException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	
	@AfterAll
	static void removeTestingStuff() {
		String sql = "delete from proj_0_db.account where account_name LIKE 'test%';";
		Connection con= ConnectionUtils.getConnection();
		try {
			
			PreparedStatement ps=con.prepareStatement(sql);
			ps.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}
